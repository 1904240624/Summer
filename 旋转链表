/*给定一个链表，旋转链表，将链表每个节点向右移动 k 个位置，其中 k 是非负数。

示例 1:

输入: 1->2->3->4->5->NULL, k = 2
输出: 4->5->1->2->3->NULL
解释:
向右旋转 1 步: 5->1->2->3->4->NULL
向右旋转 2 步: 4->5->1->2->3->NULL
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* rotateRight(struct ListNode* head, int k)
{
    if(!head)
    {
        return NULL;
    }
    struct ListNode*p=head;
    int i=1;
    while(p->next)    //求链表长度
    {
        p=p->next;
        i++;
    }
    if(i==1||i==k||k==0)      //对k分情况考虑
    {
        return head;
    }
    else if(i<k)
    {
        k=i-(k%i)-1;
    }
    else{
        k=i-k-1;
    }
    p->next=head;     //让链表成环
    p=head;
    while(k--)     //循环k次
    {
       p=p->next;
    }
    head=p->next;
    p->next=NULL;
    return head;
}
