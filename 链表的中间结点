/*给定一个带有头结点 head 的非空单链表，返回链表的中间结点。

如果有两个中间结点，则返回第二个中间结点。
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* middleNode(struct ListNode* head)
{
    if(!head)         //判空
    {
        return NULL;
    }
    struct ListNode *p=head;
    int n=0,i;
    while(p)        //遍历，求链表长度n
    {
        p=p->next;
        n++;
    }
    i=0;
    p=head;
    while(++i<=n/2)  //无论n为奇数偶数
    {
        p=p->next;
    }
    return p;
}
